/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COLEMAK 0
#define QWERTY   1
#define SYM 2
#define NAV   3
#define NUM   4
// #define MOUSE   5
// #define MEDIA_FN   6
#define MEDIA_FN   5

/ {
                
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <SYM NAV>;
                then-layer = <MEDIA_FN>;
            };

        keymap {
                compatible = "zmk,keymap";

                colemak_layer {
// -----------------------------------------------------------------------------------------
// | --- |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | --- |
// | --- |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  | --- |
// | --- |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | --- |
//                    | GUI | LWR | SPC |   | SPC | RSE  | ALT |
                        bindings = <
   &trans  &kp Q      &kp W       &kp F      &kp P       &kp B          &kp J      &kp L       &kp U      &kp Y       &kp SEMI    &trans
   &trans  &mt LALT A &mt LCTRL R &mt LGUI S &mt LSHFT T &mt RALT G     &mt RALT M &mt RSHFT N &mt RGUI E &mt RCTRL I &mt LALT O  &trans
   &trans  &kp Z      &kp X       &kp C      &kp D       &kp V          &kp K      &kp H       &kp COMMA  &kp DOT     &kp FSLH    &trans
                                  &kp BSPC   &mo NAV     &kp RET        &kp SPC    &mo SYM     &lt NUM TAB 
                        >;
                };
                qwerty_layer {
// -----------------------------------------------------------------------------------------
// | --- |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | --- |
// | --- |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | --- |
// | --- |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | --- |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans  &kp Q      &kp W       &kp E      &kp R       &kp T          &kp Y      &kp U       &kp I      &kp O       &kp P          &trans 
   &trans  &mt LALT A &mt LCTRL S &mt LGUI D &mt LSHFT F &mt RALT G     &mt RALT H &mt RSHFT J &mt RGUI K &mt RCTRL L &mt LALT SEMI  &trans
   &trans  &kp Z      &kp X       &kp C      &kp V       &kp B          &kp N      &kp M       &kp COMMA  &kp DOT     &kp FSLH       &trans 
                                  &kp BSPC   &mo NAV     &kp RET        &kp SPC    &mo SYM     &lt NUM TAB 
                        >;
                };
                sym_layer {
// -----------------------------------------------------------------------------------------
// | --- |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | --- |
// | --- |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | --- |
// | --- |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | --- |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans  &kp EXCL &kp AT    &kp HASH       &kp DLLR      &kp PRCNT        &kp CARET      &kp AMPS        &kp ASTRK      &kp PIPE  &kp BSLH  &trans 
   &trans  &kp LALT &kp LCTRL &mt LGUI GRAVE &mt LSHFT SQT &mt RALT DQT     &mt RALT UNDER &mt RSHFT MINUS &mt RGUI EQUAL &kp RCTRL &kp LALT  &trans
   &trans  &kp LT   &kp LPAR  &kp LBKT       &kp LBRC      &kp TILDE        &kp PLUS       &kp RBRC        &kp RBKT       &kp RPAR  &kp GT    &trans 
                                  &trans     &trans      &trans         &trans     &trans      &trans
                        >;
                };
                nav_layer {
                        bindings = <
   &trans  &trans   &trans    &trans   &trans    &trans      &trans    &trans      &kp UP      &trans     &trans    &trans 
   &trans  &kp LALT &kp LCTRL &kp LGUI &kp LSHFT &kp RALT    &kp HOME  &kp LEFT    &kp DOWN    &kp RIGHT  &kp END   &trans
   &trans  &trans   &trans    &trans   &trans    &trans      &trans    &trans      &kp UP      &trans     &trans    &trans 
                                  &trans     &trans      &trans         &kp ESC    &trans      &kp DEL
                        >;
                };
                num_layer {
                        bindings = <
   &trans  &trans     &kp N6   &kp N5   &kp N4   &trans      &trans    &trans      &trans      &trans     &trans    &trans 
   &trans  &kp DOT    &kp N3   &kp N2   &kp N1   &kp N0      &kp RALT  &kp RSHFT   &kp RGUI    &kp RCTRL  &kp LALT  &trans
   &trans  &kp COMMA  &kp N9   &kp N8   &kp N7   &trans      &trans    &trans      &kp UP      &trans     &trans    &trans 
                                  &trans     &trans      &trans         &trans    &trans      &trans
                        >;
                };
                media_fn_layer {
                        bindings = <
   &trans  &kp CAPS &kp F6   &kp F5   &kp F4   &trans      &trans    &trans        &trans        &trans      &trans       &trans 
   &trans  &kp F11  &kp F3   &kp F2   &kp F1   &kp F10     &trans    &kp C_BRI_UP  &kp C_VOL_UP  &kp C_NEXT  &kp C_PAUSE  &trans
   &trans  &kp F12  &kp F9   &kp F8   &kp F7   &trans      &trans    &kp C_BRI_DN  &kp C_VOL_DN  &kp C_PREV  &kp C_MUTE   &trans 
                                  &trans     &trans      &trans         &trans    &trans      &trans
                        >;
                };
        };
};
